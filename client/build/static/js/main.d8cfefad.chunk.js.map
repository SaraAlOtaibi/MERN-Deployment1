{"version":3,"sources":["components/AuthorForm.jsx","components/New.jsx","components/DeleteButton.jsx","components/AllAuthors.jsx","components/Update.jsx","App.js","reportWebVitals.js","index.js"],"names":["AuthorForm","props","initialName","onSubmitProp","getErrors","type","useState","name","setName","setErrors","className","to","onSubmit","e","preventDefault","errs","value","onChange","target","message","onClick","navigate","New","errors","author","axios","post","then","res","console","log","data","error","catch","err","DeleteButton","_id","successCallback","delete","AllAuthors","authors","setAuthors","loaded","setLoaded","getAll","get","sort","a","b","size","useEffect","map","i","Update","id","setAuthor","notFound","setNotFound","put","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8cfefad.chunk.js","sourcesContent":["\r\nimport PropTypes from 'prop-types';\r\nimport React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Router, Link, navigate} from '@reach/router';\r\n\r\n\r\nconst AuthorForm = (props) => {\r\n  const { initialName, onSubmitProp, getErrors, type} = props;\r\n  const [name, setName] = useState(initialName);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const onSubmitHandler = e => {\r\n      e.preventDefault();\r\n      const errs = onSubmitProp({name});\r\n      if (errs){\r\n        setErrors(errs);\r\n        }\r\n      //getTheErrors();\r\n      setName(initialName);\r\n      //navigate(\"/\");\r\n  }\r\n\r\n  function getTheErrors(){\r\n    const errs = getErrors()\r\n    if (errs){\r\n    setErrors(errs);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col'>\r\n        <Link to='/'> Home </Link>\r\n        {\r\n          type === 'new' ? <p> Add a new author: </p> : <p> Edit this author </p>\r\n        }\r\n        <form onSubmit={onSubmitHandler} className='form-group'>\r\n          <label> Name </label>\r\n          <input type=\"text\" className=\"form-control\" \r\n          name='name'\r\n          value={name}\r\n          onChange = { e => setName(e.target.value) } />\r\n          <p className='text-danger'> {getErrors() ? getErrors().name ? getErrors().name.message : '' : ''} </p>\r\n          <button onClick = { () => navigate('/')} className=\"btn btn-primary mt-3 mr-3\">Cancel</button>\r\n          <button type=\"submit\" className=\"btn btn-primary mt-3\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default AuthorForm;\r\n","\r\nimport ProductForm from './AuthorForm';\r\nimport React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Router, Link, navigate} from '@reach/router';\r\nimport AuthorForm from './AuthorForm';\r\n\r\nconst New = (props) => {\r\n\r\n  const [errors, setErrors] = useState();\r\n\r\n  const createAuthor = (author) => {\r\n    axios.post(\"http://localhost:8000/api/new\", author)\r\n      .then(res => {\r\n        console.log(res);\r\n        //props.successCallback();\r\n        if(res.data.error) {\r\n          setErrors(res.data.error.errors);\r\n          //console.log(res.data.error.errors.name.message)\r\n        } else {\r\n          //navigate(\"/\");\r\n        }\r\n        return errors;\r\n      }).catch(err => {\r\n        console.error(err);\r\n        //setErrors(err.data.error.errors);\r\n      });\r\n  }\r\n\r\n  function getErrors(){\r\n    return errors;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AuthorForm\r\n        initialName={''}\r\n        onSubmitProp={createAuthor}\r\n        getErrors={getErrors}\r\n        type={'new'}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default New;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DeleteButton = (props) => {\r\n  const { _id, successCallback } = props;\r\n\r\n  const deleteProduct = e => {\r\n    axios.delete(`http://localhost:8000/api/delete/${_id}`)\r\n      .then(res => {\r\n        console.log(res);\r\n        successCallback();\r\n      })\r\n  }\r\n  return (\r\n    <button className=\"btn btn-danger mb-3 ml-3\" onClick={deleteProduct}>\r\n      Delete\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default DeleteButton;\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Router, Link, navigate } from '@reach/router';\r\nimport New from './New'\r\nimport DeleteButton from './DeleteButton';\r\n\r\nconst AllAuthors = () => {\r\n\r\n  const [authors, setAuthors] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getAll();\r\n  }, []);\r\n\r\n  function getAll() {\r\n    axios.get(\"http://localhost:8000/api/authors\")\r\n      .then(res => {\r\n        console.log(res.data);\r\n        console.log('hi');\r\n        res.data.sort((a, b) => (a.name > b.name) ? 1 : (a.name === b.name) ? ((a.size > b.size) ? 1 : -1) : -1 )\r\n        setAuthors(res.data);\r\n        setLoaded(true);\r\n      }).catch(err => console.error(err));\r\n  }\r\n\r\n  /* const remove = _id => {\r\n    axios.delete(`http://localhost:8000/restaurants/${_id}`)\r\n      .then(res => {\r\n        console.log(res);\r\n        getAll();\r\n      }).catch(err => console.error(err));\r\n  } */\r\n\r\n  /*\r\n              {\r\n              loaded && products.map( (product, id) =>  \r\n              <div className='row'> \r\n              <div className='col-9'>\r\n                <Link key={id} to={`/api/products/${product._id}`}> {product.title} </Link> \r\n              </div>\r\n              <div className='col'>\r\n                <button className=\"btn btn-primary mb-3\" onClick={ () => navigate(`/api/products/${product._id}/edit`)}> Edit </button>\r\n                <DeleteButton _id={product._id} successCallback={()=>getAll()} />\r\n              </div> \r\n              </div>\r\n              )\r\n            }\r\n  */\r\n\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <div className='col'>\r\n        <Link to='api/new'> Add an author </Link>\r\n          <p> We have quotes by:</p>\r\n          <table className=\"table table-striped table-inverse table-responsive\">\r\n            <thead className=\"thead-inverse\">\r\n              <tr>\r\n                <th>Authors</th>\r\n                <th>Actions Available</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n                {\r\n                  loaded && authors.map ( (author, i ) => \r\n                  <tr key={i}>\r\n                    <td> {author.name } </td>\r\n                    <td>\r\n                      <button className=\"btn btn-primary mb-3\" onClick={ () => navigate(`/api/edit/${author._id}/`)}> Edit </button>\r\n                      <DeleteButton _id={author._id} successCallback={()=>getAll()} />\r\n                    </td>\r\n                  </tr>\r\n                  )\r\n                }\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AllAuthors;\r\n","\r\nimport React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { Router, Link, navigate} from '@reach/router';\r\nimport AuthorForm from './AuthorForm';\r\n\r\nconst Update = (props) => {\r\n\r\n  const { id } = props;\r\n  const [author, setAuthor] = useState();\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [errors, setErrors] = useState();\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/api/${props._id}`)\r\n    .then(res => {\r\n        setAuthor(res.data);\r\n        console.log(res.data);\r\n        setLoaded(true);\r\n        if(!res.data.name){\r\n          setNotFound(true);\r\n          console.log('hiiiiiiiiiii')\r\n        }\r\n    }).catch(err => {\r\n      setNotFound(true);\r\n    })\r\n  }, [])\r\n  /* useEffect(() => {\r\n    console.log(props._id);\r\n    getOne();\r\n  }, [props._id]);\r\n  \r\n  function getOne() {\r\n    axios.get(`http://localhost:8000/api/products/${props._id}`)\r\n      .then(res => {\r\n        console.log('in view: ' + res);\r\n        setProduct(res.data);\r\n        setLoaded(true);\r\n      }).catch(err => console.error(err));\r\n  } */\r\n\r\n  const updateAuthor = author => {\r\n    axios.put(`http://localhost:8000/api/edit/${props._id}`, author)\r\n      .then(res => {\r\n        console.log(res);\r\n        //props.successCallback();\r\n        if(res.data.errors) {\r\n          setErrors(res.data.errors);\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      }).catch(err => {\r\n        console.error(err);\r\n        \r\n      });\r\n      //navigate('/');\r\n  }\r\n\r\n  \r\n  function getErrors(){\r\n    return errors;\r\n  }\r\n    return (\r\n        <div>\r\n          { notFound ? \r\n          <div> \r\n            <p>We're sorry, but we could not find the author you are looking for. \r\n              Would you like to add this author to our database?\r\n            </p>\r\n              <Link to='/api/new'> Add </Link>\r\n              </div> :\r\n                loaded && <AuthorForm \r\n                initialName={author.name}\r\n                onSubmitProp={updateAuthor}\r\n                getErrors={getErrors}\r\n                type={'new'}\r\n                />\r\n                \r\n              }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Update;\r\n\r\n\r\n\r\n","import './App.css';\nimport React, {useState,useEffect} from 'react';\nimport { Router, Link, navigate} from '@reach/router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport AllAuthors from './components/AllAuthors';\nimport AuthorForm from './components/AuthorForm';\nimport New from './components/New';\nimport Update from './components/Update';\n\n\nfunction App() {\n\n  return (\n    <div className='container'>\n      <h1 className='text-center'>Favorite Authors</h1>\n      <Link to='api/new'> Add an author </Link>\n      <Router>\n        <AllAuthors path='/'/>\n        <New path='/api/new' />\n        <Update path='/api/edit/:_id'/>\n      </Router> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}